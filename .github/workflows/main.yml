name: CI

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: "3.10"
          environment-file: environment.yml
          activate-environment: py310hl_gaps_pub
          auto-activate-base: false
          channels: conda-forge
          channel-priority: strict
      - name: Run linters
        run: conda run -n py310hl_gaps_pub tox -e flake8,black,mypy

  test:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.python-version }}
          environment-file: environment.yml
          activate-environment: py310hl_gaps_pub
          auto-activate-base: false
          channels: conda-forge
          channel-priority: strict
          cache: true
      - name: Install package in editable mode
        run: conda run -n py310hl_gaps_pub pip install -e .
      - name: Run tests with pytest and coverage
        run: conda run -n py310hl_gaps_pub tox -r -e py
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  build-docs:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: "3.10"
          environment-file: environment.yml
          activate-environment: py310hl_gaps_pub
          auto-activate-base: false
          channels: conda-forge
          channel-priority: strict
          cache: true
      - name: Build documentation
        run: conda run -n py310hl_gaps_pub tox -e docs
      - name: Upload documentation artifact
        uses: actions/upload-artifact@v3
        with:
          name: html-docs
          path: docs/_build/html


#  # Optional: Deploy to GitHub Pages (see notes below)
#  deploy-docs:
#    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' # Deploy on push on main branch
#    needs: build-docs
#    runs-on: ubuntu-latest
#    permissions:
#      pages: write
#      id-token: write
#    environment:
#      name: github-pages
#      url: ${{ steps.deployment.outputs.page_url }}
#    steps:
#      - name: Deploy to GitHub Pages
#        id: deployment
#        uses: actions/deploy-pages@v4 #Deploy to Github Pages.